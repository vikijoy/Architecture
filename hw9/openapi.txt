openapi: 3.0.1
info:
  title: Получение информации о клиентах
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
paths:
  /clients:
    get:
      summary: Метод получения списка клиентов
      tags:
        - Clients
      operationId: getAllClients
      responses:
        '200':
          description: Успешный ответ со спиcком клиентов
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Clients'
        default:
          description: Всё остальное
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Метод добавления нового клиента в список
      tags:
        - Clients
      operationId: createClient
      requestBody:
        required: true
        content:
          adplication/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Успешный ответ добавления нового клиента
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Client'
        default:
          description: Всё остальное
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clients/{idClient}:
    put:
      summary: Метод изменения клиента по id
      tags:
        - Clients
      operationId: updateClientById
      parameters:
        - name: idClient
          in: path
          required: true
          description: id Client
          schema:
            type: string
        - name: client
          in: query
          required: true
          description: Updated client information
          schema:
            $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Успешное изменение клиента по id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Ошибка запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Метод получения клиента по id
      tags:
        - Clients
      operationId: getClientId
      parameters:
        - name: idClient
          in: path
          required: true
          description: id Client
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ получения клиента по id
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Client'
        default:
          description: Всё остальное
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Удаление клиента по id
      tags:
        - Clients
      operationId: deleteClientById
      parameters:
        - name: idClient
          in: path
          required: true
          description: id Client
          schema:
            type: string
      responses:
        '200':
          description: Успешное удаление клиента по id
          content:
            adplication/json: {}
        default:
          description: Всё остальное
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Error'

  /clouds/{id}:
    get:
      summary: Метод получения информации о Cloud по id
      tags:
        - Clouds
      operationId: getCloudById
      parameters:
        - name: id
          in: path
          required: true
          description: ID Cloud
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ получения информации о Cloud по id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '404':
          description: Cloud не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Всё остальное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Метод обновления Cloud по id
      tags:
        - Clouds
      operationId: updateCloudById
      parameters:
        - name: id
          in: path
          required: true
          description: ID Cloud
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
      responses:
        '200':
          description: Успешное обновление Cloud по id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '404':
          description: Cloud не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Всё остальное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Метод удаления Cloud по id
      tags:
        - Clouds
      operationId: deleteCloudById
      parameters:
        - name: id
          in: path
          required: true
          description: ID Cloud
          schema:
            type: string
      responses:
        '200':
          description: Успешное удаление Cloud по id
          content:
            application/json: {}
        '404':
          description: Cloud не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Всё остальное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clouds:
    get:
      summary: Метод получения списка облаков
      tags:
        - Clients
      operationId: getAllClouds
      responses:
        '200':
          description: Успешный ответ со спиcком облаков
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Clouds'
        default:
          description: Всё остальное
          content:
            adplication/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Метод создания нового Cloud
      tags:
        - Clouds
      operationId: createCloud
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
      responses:
        '201':
          description: Успешное создание нового Cloud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: Всё остальное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Client:
      type: object
      required:
        - idClient
        - name
      properties:
        idClient:
          type: integer
          example: 1
          description: Id клиента
        name:
          type: string
          example: Виктория
          description: Имя клиента
    Clients:
      type: array
      items:
        $ref: '#/components/schemas/Client'
    Error:
      type: object
      required:
        - codeError
        - messageError
      properties:
        codeError:
          type: string
          example: 123f456
          description: Код ошибки
        messageError:
          type: string
          example: error
          description: Сообщение ошибки
    Cloud:
      type: object
      required:
        - OS
        - RAM
        - CPU
        - SSD
        - idClient
      properties:
        OS:
          type: string
          enum:
            - Windows
            - Linux
        RAM:
          type: integer
          example: 256
          description: Количество оперативной памяти
        CPU:
          type: integer
          example: 8
          description: Количество ядер процессора
        SSD:
          type: integer
          example: 1024
          description: Количетсво ssd памяти
        idClient:
          type: integer
          example: 1
    Clouds:
      type: array
      items:
        $ref: '#/components/schemas/Cloud'